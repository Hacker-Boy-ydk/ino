#include <ESP8266WiFi.h>

#include <ESP8266WebServer.h>

// Define the GPIO pin to control relay

const int relayPin = 4; // GPIO5 (D1 on NodeMCU)

const char* ssid = "Abdul Qadeer";

const char* password = "7715860090";

ESP8266WebServer server(80); // Create a web server on port 80

void setup() {

 // Start the serial communication

 Serial.begin(115200);

 // Connect to Wi-Fi

 WiFi.begin(ssid, password);

 while (WiFi.status() != WL_CONNECTED) {

 delay(1000);

 Serial.println("Connecting to WiFi...");

 }
 Serial.println("Connected to WiFi!");

 Serial.println(WiFi.localIP());

 // Setup relay pin

 pinMode(relayPin, OUTPUT);

 digitalWrite(relayPin, LOW); // Turn off the appliance initially

 // Define the web page to control the relay

 server.on("/", HTTP_GET, []() {

 String html = "<html><head><style>";

 html += "body {font-family: Arial, sans-serif; background-color: #f4f4f9; margin: 0; padding: 0;

text-align: center;}";

 html += "h1 {color: #333;}";

 html += "button {background-color: #4CAF50; color: white; padding: 14px 20px; border: none;

cursor: pointer; font-size: 18px; margin: 20px; border-radius: 5px; transition: background-color

0.3s;}";

 html += "button:hover {background-color: #45a049;}";

 html += "a {text-decoration: none;}";

 html += ".container {display: flex; justify-content: center; align-items: center; height: 100vh;

flex-direction: column;}";

 html += ".status {font-size: 20px; margin-top: 30px;}";

 html += "</style></head><body>";

 html += "<div class='container'><h3>Perform By :<br>Abdul Qadeer - 43<br>Harsh Kumar -

36</h1><br><h1>Control Appliance</h1>";

 // Check the relay status and update button text accordingly

 if (digitalRead(relayPin) == HIGH) {

 html += "<p><strong>Appliance is OFF</strong></p>";

 html += "<p><a href=\"/toggle\"><button>Turn ON</button></a></p>"; // Toggle to OFF

 } else {

 html += "<p><strong>Appliance is ON</strong></p>";

 html += "<p><a href=\"/toggle\"><button>Turn OFF</button></a></p>"; // Toggle to ON

 }

 

 html += "</div></body></html>";

 server.send(200, "text/html", html);

 });

 // Toggle relay state (ON/OFF)
 server.on("/toggle", HTTP_GET, []() {

 // Toggle the relay state

 if (digitalRead(relayPin) == HIGH) {

 digitalWrite(relayPin, LOW); // Deactivate relay (turn off)

 } else {

 digitalWrite(relayPin, HIGH); // Activate relay (turn on)

 }

 server.sendHeader("Location", "/"); // Redirect back to main page

 server.send(303); // 303 is the status code for redirecting

 });

 // Start the web server

 server.begin();

}

void loop() {

 server.handleClient(); // Handle incoming web requests

}

